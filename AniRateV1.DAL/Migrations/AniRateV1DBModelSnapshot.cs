// <auto-generated />
using AniRateV1.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AniRateV1.DAL.Migrations
{
    [DbContext(typeof(AniRateV1DB))]
    partial class AniRateV1DBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AniRateV1.DAL.Entities.AnimeCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimeCollections");
                });

            modelBuilder.Entity("AniRateV1.DAL.Entities.AnimeTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnimeTitles");
                });

            modelBuilder.Entity("AnimeCollectionAnimeTitle", b =>
                {
                    b.Property<int>("AnimeCollectionsId")
                        .HasColumnType("int");

                    b.Property<int>("AnimeTitlesId")
                        .HasColumnType("int");

                    b.HasKey("AnimeCollectionsId", "AnimeTitlesId");

                    b.HasIndex("AnimeTitlesId");

                    b.ToTable("AnimeCollectionAnimeTitle");
                });

            modelBuilder.Entity("AnimeCollectionAnimeTitle", b =>
                {
                    b.HasOne("AniRateV1.DAL.Entities.AnimeCollection", null)
                        .WithMany()
                        .HasForeignKey("AnimeCollectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AniRateV1.DAL.Entities.AnimeTitle", null)
                        .WithMany()
                        .HasForeignKey("AnimeTitlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
